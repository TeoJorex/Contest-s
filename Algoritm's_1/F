using System.Collections;
using System.Collections.Generic;
using System;
using System.Linq;

namespace zadach
{
	class Tinkof
	{
        public static void Main()
        {
            var n = Console.ReadLine();
            var line = Console.ReadLine().Split(" ");
            int[] a = Array.ConvertAll(line, s => int.Parse(s));
            int[] b = {0};
            int l = 0;
            int r = a.Length - 1;
 

            MergeSort(a, l, r,b);
            
            Console.WriteLine(b[0]);
            Console.WriteLine(" ");
            for (int i = 0; i < a.Length; i++)
            {
                Console.Write($"{a[i]} ");
            }
            
        }

        static void MergeSort(int[] a, int l, int r, int[] b)
        {
            int q;

            if (l < r)
            {
                q = (l + r) / 2;
                MergeSort(a, l, q, b);
                MergeSort(a, q + 1, r,  b);
                Merge(a, l, q, r, b);
            }
        }
        static void Merge(int[] a, int l, int m, int r, int[] b)
        {
            int i, j, k;

            int n1 = m - l + 1;
            int n2 = r - m;

            int[] left = new int[n1];
            int[] right = new int[n2];

            for (i = 0; i < n1; i++)
            {
                left[i] = a[l + i];
            }

            for (j = 1; j <= n2; j++)
            {
                right[j - 1] = a[m + j];
            }

            i = 0;
            j = 0;

            for (k = l; k <= r; k++)
            {
                if(i == n1)
                {
                    a[k] = right[j];
                    j = j + 1;
                    continue;
                }
                if(j == n2)
                {
                    a[k] = left[i];
                    i = i + 1;
                    continue;
                }
                if (left[i] < right[j])
                {
                    a[k] = left[i];
                    i = i + 1;
                    continue;
                }                
                if (left[i] >= right[j])
                {
                    a[k] = right[j];
                    b[0] += left.Count() - i;
                    j = j + 1;
                                        
                }                            
            }
        }
    }	
}
